1. variables.js:- 
            1. In javascript const and let have block scope envirnment 
            2. We can declare and assigne value to const only once. Because It is a contant variable.
            3. To let variable we can define and assigne value multiple time but we can not re-declare to let variable.
            4. In JavaScript, the var keyword creates variables with function scope or global scope. 

2. 02_datatypes.js:-
            1. string = "",
            2. boolean = true/false,
            3. bigint
            4. number = 243
            5. null = standalone value (type = Object);
            5. undefined = undefined

3. datatype-summary:-
            1. Symbol always return a unique value
            2. the primitive data types values always transfer their value copy to another variable.
            3. non-primitive data types(reference data types) always transfer base on reference It means 

            ******************************************************************************************************************
                                        Primitive and Non-Primitive Data types Store in Memories
            ******************************************************************************************************************
            1. stack Memorie (primitive):- It always provide copy.
            2. heap Memorie (non-primitive):- It always provide reference.

            1. all variables store in stack memorie.
            2. when we store non-primitive data to a variable that time that variable will be in stack 
            but still It will point to the heap memorie because it has took reference of non-primitive data.


           


